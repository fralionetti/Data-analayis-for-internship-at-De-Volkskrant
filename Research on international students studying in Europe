{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c62759fb",
   "metadata": {},
   "source": [
    "# Data project on international students"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7769e008",
   "metadata": {},
   "source": [
    "I look at the datasets about student mobility available on: https://www.iie.org/research-initiatives/project-atlas/explore-global-data/. The main questions that we want to answer are:                                                                1. How many i ternational students are there in the Netherlands compared to other european countries?                        2. Where do international students in the Netherlands come from? Are they mainly EEA students?                             To do so, I work with the dataset of all of the european countries available on project atlas. I first clean all of the datasets and then merge them together. Then, I look specifically at what are the top 10 countries of origin of the international students coming to the Netherlands and what are the amounts. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef5716a2",
   "metadata": {},
   "source": [
    "# Cleaning the UK dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8a3e275d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                     United Kingdom   \n",
      "2                                     United Kingdom   \n",
      "3                                     United Kingdom   \n",
      "4                                     United Kingdom   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2021/22   \n",
      "3                                            2021/22   \n",
      "4                                            2021/22   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in UK   \n",
      "1                                                ALL   \n",
      "2                                              China   \n",
      "3                                              India   \n",
      "4                                            Nigeria   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                                Yes   \n",
      "2                                                Yes   \n",
      "3                                                Yes   \n",
      "4                                                Yes   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  8   \n",
      "2                                                  8   \n",
      "3                                                  8   \n",
      "4                                                  8   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2021   \n",
      "2                                               2021   \n",
      "3                                               2021   \n",
      "4                                               2021   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  7   \n",
      "2                                                  7   \n",
      "3                                                  7   \n",
      "4                                                  7   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                               2022   \n",
      "3                                               2022   \n",
      "4                                               2022   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                                NaN  ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                              41920   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                       79270   \n",
      "2                                         NaN   \n",
      "3                                         NaN   \n",
      "4                                         NaN   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                              75270   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                             43255   \n",
      "2                                               NaN   \n",
      "3                                               NaN   \n",
      "4                                               NaN   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                          58085   \n",
      "2                                            NaN   \n",
      "3                                            NaN   \n",
      "4                                            NaN   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                 17440   \n",
      "2                                   NaN   \n",
      "3                                   NaN   \n",
      "4                                   NaN   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                  33685   \n",
      "2                                    NaN   \n",
      "3                                    NaN   \n",
      "4                                    NaN   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                    6170   \n",
      "2                                     NaN   \n",
      "3                                     NaN   \n",
      "4                                     NaN   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                              73530   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1                                                NaN  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary packages and importing the UK dataset\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to my Excel file\n",
    "excel_file_path_studentsUK = \"C:/Users/lionet000\\Downloads/UK_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with the info on international students\n",
    "sheet_name_studentsUK= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfUK = pd.read_excel(excel_file_path_studentsUK, sheet_name=sheet_name_studentsUK)\n",
    "    \n",
    "#I save it into a new CSV file:\n",
    "dfUK.to_csv('studentsUK_dataset.csv', index=False)\n",
    "\n",
    "#I Visualize the dataset\n",
    "print(dfUK.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1b3fb77b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                     United Kingdom   \n",
      "2                                     United Kingdom   \n",
      "3                                     United Kingdom   \n",
      "4                                     United Kingdom   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2022   \n",
      "3                                            2021   \n",
      "4                                            2020   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                165   \n",
      "4                                                167   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                  1   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                285   \n",
      "2                                                282   \n",
      "3                                                165   \n",
      "4                                                168   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                            2380000   \n",
      "4                                                NaN   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students (including...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            2862620  \n",
      "2                                            2751865  \n",
      "3                                            2380000  \n",
      "4                                            2478105  \n"
     ]
    }
   ],
   "source": [
    "#now, I import another sheet from the UK dataset, that with general info on the higher education system \n",
    "excel_file_path_studentsUK = \"C:/Users/lionet000\\Downloads/UK_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "sheet_name_studentsUK2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfUK2 = pd.read_excel(excel_file_path_studentsUK, sheet_name=sheet_name_studentsUK2)\n",
    "    \n",
    "#I save the DataFrame into a new CSV file:\n",
    "dfUK2.to_csv('studentsUK2_dataset.csv', index=False)\n",
    "\n",
    "#I Visualize the dataset\n",
    "print(dfUK2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "107a592e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear         Country IB_Students_Total Country_Origin\n",
      "1       2021/22  United Kingdom            718085            ALL\n",
      "12      2020/21  United Kingdom            633910            ALL\n",
      "23      2019/20  United Kingdom            601205            ALL\n",
      "34      2018/19  United Kingdom            551495            ALL\n",
      "45      2017/18  United Kingdom            496570            ALL\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need\n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfUK_subset = dfUK[columns_to_keep]\n",
    "\n",
    "#at the moment, I am only interested in the overall number of international students and not in their country of origin. Hence, I only keep the total number of international students \n",
    "dfUK_subset = dfUK_subset.query(\"Country_Origin == 'ALL'\")\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns. I check that everything went well\n",
    "print(dfUK_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "14fc6c92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                     United Kingdom   \n",
      "2                                     United Kingdom   \n",
      "3                                     United Kingdom   \n",
      "4                                     United Kingdom   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            2862620  \n",
      "2                                            2751865  \n",
      "3                                            2380000  \n",
      "4                                            2478105  \n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfUK2_subset = dfUK2[columns_to_keep]\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns. I check that everything went well\n",
    "print(dfUK2_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bc3783ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear         Country % international students\n",
      "0      2021/22  United Kingdom                25.084887\n",
      "1      2020/21  United Kingdom                 23.03565\n",
      "2      2019/20  United Kingdom                25.260714\n",
      "3      2018/19  United Kingdom                22.254707\n",
      "4      2017/18  United Kingdom                20.863891\n"
     ]
    }
   ],
   "source": [
    "#now, I merge the 2 datsets\n",
    "dfUK_final = pd.merge(dfUK_subset, dfUK2_subset, on=['Country', 'AcademicYear'])\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later on. \n",
    "dfUK_final['% international students'] = dfUK_final['IB_Students_Total'] / dfUK_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need (to review later)\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfUK_final = dfUK_final[columns_to_keep_final]\n",
    "\n",
    "#I print the dataframe and check that everything went well\n",
    "print(dfUK_final.head())\n",
    "\n",
    "#I save the dataset to a csv file \n",
    "dfUK_final.to_csv('studentsUK_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1f41d6d",
   "metadata": {},
   "source": [
    "# Cleaning the Spanish dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "505c348c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                             Spain    \n",
      "2                                              Spain   \n",
      "3                                              Spain   \n",
      "4                                              Spain   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2021/22   \n",
      "3                                            2021/23   \n",
      "4                                            2021/24   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in...   \n",
      "1                                                ALL   \n",
      "2                                             France   \n",
      "3                                              Italy   \n",
      "4                                            Germany   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                                Yes   \n",
      "2                                                Yes   \n",
      "3                                                Yes   \n",
      "4                                                Yes   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  9   \n",
      "2                                                  9   \n",
      "3                                                  9   \n",
      "4                                                  9   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2021   \n",
      "2                                               2021   \n",
      "3                                               2021   \n",
      "4                                               2021   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  8   \n",
      "2                                                  8   \n",
      "3                                                  8   \n",
      "4                                                  8   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                               2022   \n",
      "3                                               2022   \n",
      "4                                               2022   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                                NaN  ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                         NaN   \n",
      "2                                         NaN   \n",
      "3                                         NaN   \n",
      "4                                         NaN   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                               NaN   \n",
      "2                                               NaN   \n",
      "3                                               NaN   \n",
      "4                                               NaN   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                            NaN   \n",
      "2                                            NaN   \n",
      "3                                            NaN   \n",
      "4                                            NaN   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                   NaN   \n",
      "2                                   NaN   \n",
      "3                                   NaN   \n",
      "4                                   NaN   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                    NaN   \n",
      "2                                    NaN   \n",
      "3                                    NaN   \n",
      "4                                    NaN   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                     NaN   \n",
      "2                                     NaN   \n",
      "3                                     NaN   \n",
      "4                                     NaN   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                             135478   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1                                                NaN  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 32 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to your Excel file\n",
    "excel_file_path_studentsSpain = \"C:/Users/lionet000\\Downloads/Spain_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with all of the info on international students\n",
    "sheet_name_studentsSpain= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfSpain = pd.read_excel(excel_file_path_studentsSpain, sheet_name=sheet_name_studentsSpain)\n",
    "    \n",
    "#I save the DataFrame into a new CSV file:\n",
    "dfSpain.to_csv('studentsSpain_dataset.csv', index=False)\n",
    "\n",
    "#I Visualize the dataset\n",
    "print(dfSpain.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "11d46060",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                              Spain   \n",
      "2                                             Spain    \n",
      "3                                             Spain    \n",
      "4                                              Spain   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2022   \n",
      "3                                            2021   \n",
      "4                                            2020   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                 50   \n",
      "2                                                 50   \n",
      "3                                                 50   \n",
      "4                                                 50   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                 36   \n",
      "2                                                 34   \n",
      "3                                                 33   \n",
      "4                                                 33   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                 86   \n",
      "2                                                 84   \n",
      "3                                                 83   \n",
      "4                                                 83   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                            1314328   \n",
      "2                                            1328957   \n",
      "3                                            1306107   \n",
      "4                                            1307632   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students (including...   \n",
      "1                                             383911   \n",
      "2                                             350100   \n",
      "3                                             320103   \n",
      "4                                             291418   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            1698239  \n",
      "2                                            1679057  \n",
      "3                                            1626210  \n",
      "4                                            1599050  \n"
     ]
    }
   ],
   "source": [
    "#now, I open the shee with the general info on the higher education system. \n",
    "excel_file_path_studentsSpain = \"C:/Users/lionet000\\Downloads/Spain_2023 Longitudinal Table.xlsx\"\n",
    "sheet_name_studentsSpain2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfSpain2 = pd.read_excel(excel_file_path_studentsSpain, sheet_name=sheet_name_studentsSpain2)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfSpain2.to_csv('studentsSpain2_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfSpain2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8b8b4317",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear Country IB_Students_Total Country_Origin\n",
      "1       2021/22  Spain             135478            ALL\n",
      "12      2020/21   Spain             91558            ALL\n",
      "23      2019/20   Spain            129400            ALL\n",
      "34      2018/19   Spain            125675            ALL\n",
      "45      2017/18   Spain            120991            ALL\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need\n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfSpain_subset = dfSpain[columns_to_keep]\n",
    "\n",
    "#at the moment I am interested in the total number of international students and not in their countyr of origin, so I keep only the total number\n",
    "dfSpain_subset = dfSpain_subset.query(\"Country_Origin == 'ALL'\")\n",
    "\n",
    "#Now, 'df_subset' contains only the specified columns. I check that everything went well.\n",
    "print(dfSpain_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0771c871",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear Country  HE_Students_Total\n",
      "1      2021/22   Spain          1698239.0\n",
      "2      2020/21   Spain          1679057.0\n",
      "3      2019/20   Spain          1626210.0\n",
      "4      2018/19   Spain          1599050.0\n",
      "5      2017/18   Spain          1583025.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\lionet000\\AppData\\Local\\Temp\\ipykernel_16108\\2432795612.py:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  dfSpain2_subset['AcademicYear'] = dfSpain2_subset['AcademicYear'].str.extract(r'(\\d{4}/\\d{2})')\n",
      "C:\\Users\\lionet000\\AppData\\Local\\Temp\\ipykernel_16108\\2432795612.py:7: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  dfSpain2_subset['Country'] = dfSpain2_subset['Country'].str.extract(r'([a-zA-Z]+)')\n",
      "C:\\Users\\lionet000\\AppData\\Local\\Temp\\ipykernel_16108\\2432795612.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  dfSpain2_subset['HE_Students_Total'] = pd.to_numeric(dfSpain2_subset['HE_Students_Total'], errors='coerce')\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need (to review later)\n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfSpain2_subset = dfSpain2[columns_to_keep]\n",
    "\n",
    "#I clean the columns names\n",
    "dfSpain2_subset['AcademicYear'] = dfSpain2_subset['AcademicYear'].str.extract(r'(\\d{4}/\\d{2})')\n",
    "dfSpain2_subset['Country'] = dfSpain2_subset['Country'].str.extract(r'([a-zA-Z]+)')\n",
    "\n",
    "#I transform the total number of students to a numeric variable, so that I can create the variable with the % of international students as a share of the toal student body later on. \n",
    "dfSpain2_subset['HE_Students_Total'] = pd.to_numeric(dfSpain2_subset['HE_Students_Total'], errors='coerce')\n",
    "\n",
    "#I drop the NAz\n",
    "dfSpain2_subset = dfSpain2_subset.dropna()\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns. I check that everything went well\n",
    "print(dfSpain2_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1509d903",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear Country IB_Students_Total Country_Origin  HE_Students_Total\n",
      "0      2021/22  Spain             135478            ALL                NaN\n",
      "1      2020/21   Spain             91558            ALL          1679057.0\n",
      "2      2019/20   Spain            129400            ALL          1626210.0\n",
      "3      2018/19   Spain            125675            ALL          1599050.0\n",
      "4      2017/18   Spain            120991            ALL          1583025.0\n",
      "5      2016/17   Spain            109522            ALL          1564943.0\n",
      "6      2015/16   Spain             94962            ALL          1548369.0\n",
      "7      2014/15   Spain             76057            ALL          1538241.0\n",
      "8      2013/14   Spain            189198            ALL          1532728.0\n",
      "9      2012/13   Spain             73639            ALL          1561123.0\n"
     ]
    }
   ],
   "source": [
    "#I merge the 2 datsets\n",
    "dfSpain_final = pd.merge(dfSpain_subset, dfSpain2_subset, on=['Country', 'AcademicYear'], how='left')\n",
    "\n",
    "#I print the new dataset.\n",
    "print(dfSpain_final)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7a6455dd",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'dfSpain_final' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[3], line 5\u001b[0m\n\u001b[0;32m      3\u001b[0m column_name \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mHE_Students_Total\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m      4\u001b[0m new_value \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1698239.0\u001b[39m  \u001b[38;5;66;03m# the value you want to add\u001b[39;00m\n\u001b[1;32m----> 5\u001b[0m dfSpain_final\u001b[38;5;241m.\u001b[39mat[row_index, column_name] \u001b[38;5;241m=\u001b[39m new_value\n\u001b[0;32m      7\u001b[0m \u001b[38;5;66;03m#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later on. \u001b[39;00m\n\u001b[0;32m      8\u001b[0m dfSpain_final[\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m% i\u001b[39;00m\u001b[38;5;124mnternational students\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m dfSpain_final[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mIB_Students_Total\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m/\u001b[39m dfSpain_final[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mHE_Students_Total\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m100\u001b[39m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'dfSpain_final' is not defined"
     ]
    }
   ],
   "source": [
    "#For some reason the value of the total number of students in 2021/22 gets lots, so i add it manually\n",
    "row_index = 0\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value = 1698239.0  # the value you want to add\n",
    "dfSpain_final.at[row_index, column_name] = new_value\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later on. \n",
    "dfSpain_final['% international students'] = dfSpain_final['IB_Students_Total'] / dfSpain_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfSpain_final = dfSpain_final[columns_to_keep_final]\n",
    "\n",
    "#I print the dataset and check that everything went well. \n",
    "print(dfSpain_final)\n",
    "\n",
    "#I save the final dataset\n",
    "dfSpain_final.to_csv('studentsSpain_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c6d953f",
   "metadata": {},
   "source": [
    "# Cleaning the Polish dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8780ea02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                            Poland    \n",
      "2                                            Poland    \n",
      "3                                            Poland    \n",
      "4                                            Poland    \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2021/22   \n",
      "3                                            2021/22   \n",
      "4                                            2021/22   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in...   \n",
      "1                                                All   \n",
      "2                                            Ukraine   \n",
      "3                                            Belarus   \n",
      "4                                           Zimbabwe   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                               Yes    \n",
      "2                                                Yes   \n",
      "3                                                Yes   \n",
      "4                                                Yes   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                 10   \n",
      "2                                                 10   \n",
      "3                                                 10   \n",
      "4                                                 10   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2021   \n",
      "2                                               2021   \n",
      "3                                               2021   \n",
      "4                                               2021   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  9   \n",
      "2                                                  9   \n",
      "3                                                  9   \n",
      "4                                                  9   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                               2022   \n",
      "3                                               2022   \n",
      "4                                               2022   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                                NaN  ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                                669   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                       14325   \n",
      "2                                         NaN   \n",
      "3                                         NaN   \n",
      "4                                         NaN   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                               5518   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                              4256   \n",
      "2                                               NaN   \n",
      "3                                               NaN   \n",
      "4                                               NaN   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                          11901   \n",
      "2                                            NaN   \n",
      "3                                            NaN   \n",
      "4                                            NaN   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                  1724   \n",
      "2                                   NaN   \n",
      "3                                   NaN   \n",
      "4                                   NaN   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                   5130   \n",
      "2                                    NaN   \n",
      "3                                    NaN   \n",
      "4                                    NaN   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                    1105   \n",
      "2                                     NaN   \n",
      "3                                     NaN   \n",
      "4                                     NaN   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                               9830   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1                                                NaN  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to your Excel file\n",
    "excel_file_path_studentsPoland = \"C:/Users/lionet000\\Downloads/Poland_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with information on the international students\n",
    "sheet_name_studentsPoland= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfPoland = pd.read_excel(excel_file_path_studentsPoland, sheet_name=sheet_name_studentsPoland)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfPoland.to_csv('studentsPoland_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfPoland.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6c695219",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                             Poland   \n",
      "2                                             Poland   \n",
      "3                                             Poland   \n",
      "4                                             Poland   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2022   \n",
      "3                                            2021   \n",
      "4                                            2020   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                152   \n",
      "2                                                131   \n",
      "3                                                131   \n",
      "4                                                130   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                224   \n",
      "2                                                237   \n",
      "3                                                243   \n",
      "4                                                262   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                376   \n",
      "2                                                368   \n",
      "3                                                374   \n",
      "4                                                397   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                             828881   \n",
      "2                                             851347   \n",
      "3                                             862342   \n",
      "4                                             901801   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students (including...   \n",
      "1                                             379141   \n",
      "2                                             366699   \n",
      "3                                             341656   \n",
      "4                                             328453   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            1208828  \n",
      "2                                            1218046  \n",
      "3                                            1203998  \n",
      "4                                            1230254  \n"
     ]
    }
   ],
   "source": [
    "#now, I open the sheet with the general info on the higher education system. \n",
    "excel_file_path_studentsPoland = \"C:/Users/lionet000\\Downloads/Poland_2023 Longitudinal Table.xlsx\"\n",
    "sheet_name_studentsPoland2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfPoland2 = pd.read_excel(excel_file_path_studentsPoland, sheet_name=sheet_name_studentsPoland2)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfPoland2.to_csv('studentsPoland2_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfPoland2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b6904c3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear  Country IB_Students_Total Country_Origin\n",
      "1       2021/22  Poland              85897            All\n",
      "12      2020/21  Poland              84689            ALL\n",
      "23      2019/20  Poland              82194            ALL\n",
      "34      2018/19   Poland             78259            ALL\n",
      "45      2017/18   Poland             72743            ALL\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfPoland_subset = dfPoland[columns_to_keep]\n",
    "\n",
    "#at the moment, I am only interested in the overall number of international students and not in their country of origin. Hence, I only keep the total number of international students \n",
    "dfPoland_subset = dfPoland_subset[dfPoland_subset['Country_Origin'].isin(['ALL', 'All'])]\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns. I check that everything went well. \n",
    "print(dfPoland_subset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1980e3db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear Country HE_Students_Total\n",
      "1      2021/22  Poland           1208828\n",
      "2      2020/21  Poland           1218046\n",
      "3      2019/20  Poland           1203998\n",
      "4      2018/19  Poland           1230254\n",
      "5      2017/18  Poland           1291900\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfPoland2_subset = dfPoland2[columns_to_keep]\n",
    "\n",
    "I clean the \"Academic Year\" column\n",
    "dfPoland2_subset = dfPoland2_subset[dfPoland2_subset['AcademicYear'].str.match(r'\\d{4}/\\d{2}$')]\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns\n",
    "print(dfPoland2_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f07653c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear  Country IB_Students_Total Country_Origin HE_Students_Total\n",
      "0      2021/22  Poland              85897            All               NaN\n",
      "1      2020/21  Poland              84689            ALL               NaN\n",
      "2      2019/20  Poland              82194            ALL               NaN\n",
      "3      2018/19   Poland             78259            ALL           1230254\n",
      "4      2017/18   Poland             72743            ALL           1291900\n"
     ]
    }
   ],
   "source": [
    "#I merge the 2 datsets\n",
    "dfPoland_final = pd.merge(dfPoland_subset, dfPoland2_subset, on=['Country', 'AcademicYear'], how='left')\n",
    "print(dfPoland_final)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fdcc67eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear  Country % international students\n",
      "0      2021/22  Poland                  7.105808\n",
      "1      2020/21  Poland                  6.952857\n",
      "2      2019/20  Poland                  6.826756\n",
      "3      2018/19   Poland                 6.361207\n",
      "4      2017/18   Poland                 5.630699\n"
     ]
    }
   ],
   "source": [
    "#For some reason the values for the total number of students in the first three rows do not get printed. So, I add them manually\n",
    "row_index = 0\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value = 1208828  # the value you want to add\n",
    "\n",
    "row_index1 = 1\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value1 = 1218046  # the value you want to add\n",
    "\n",
    "row_index2 = 2\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value2 = 1203998  # the value you want to add\n",
    "dfPoland_final.at[row_index, column_name] = new_value\n",
    "dfPoland_final.at[row_index1, column_name] = new_value1\n",
    "dfPoland_final.at[row_index2, column_name] = new_value2\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later on.\n",
    "dfPoland_final['% international students'] = dfPoland_final['IB_Students_Total'] / dfPoland_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfPoland_final = dfPoland_final[columns_to_keep_final]\n",
    "\n",
    "#I print the dataset and check that everything went well\n",
    "print(dfPoland_final)\n",
    "\n",
    "#I save the final dataset\n",
    "dfPoland_final.to_csv('studentsPoland_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f002ce5",
   "metadata": {},
   "source": [
    "# Cleaning the Italian dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d2a701f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                              Italy   \n",
      "2                                              Italy   \n",
      "3                                              Italy   \n",
      "4                                              Italy   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2021/22   \n",
      "3                                            2021/22   \n",
      "4                                            2021/22   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in...   \n",
      "1                                                All   \n",
      "2                                              China   \n",
      "3                                            Romania   \n",
      "4                                            Albania   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                                Yes   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                 11   \n",
      "2                                                 11   \n",
      "3                                                 11   \n",
      "4                                                 11   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2021   \n",
      "2                                               2021   \n",
      "3                                               2021   \n",
      "4                                               2021   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                 10   \n",
      "2                                                 10   \n",
      "3                                                 10   \n",
      "4                                                 10   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                               2022   \n",
      "3                                               2022   \n",
      "4                                               2022   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                                NaN  ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                               7987   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                       24071   \n",
      "2                                         NaN   \n",
      "3                                         NaN   \n",
      "4                                         NaN   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                               3949   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                             16116   \n",
      "2                                               NaN   \n",
      "3                                               NaN   \n",
      "4                                               NaN   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                          12395   \n",
      "2                                            NaN   \n",
      "3                                            NaN   \n",
      "4                                            NaN   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                  2226   \n",
      "2                                   NaN   \n",
      "3                                   NaN   \n",
      "4                                   NaN   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                   9168   \n",
      "2                                    NaN   \n",
      "3                                    NaN   \n",
      "4                                    NaN   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                    1181   \n",
      "2                                     NaN   \n",
      "3                                     NaN   \n",
      "4                                     NaN   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                              10110   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1                                                NaN  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to your Excel file\n",
    "excel_file_path_studentsItaly = \"C:/Users/lionet000\\Downloads/Italy_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with the info on the international students\n",
    "sheet_name_studentsItaly= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfItaly = pd.read_excel(excel_file_path_studentsItaly, sheet_name=sheet_name_studentsItaly, skiprows=1)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfItaly.to_csv('studentsItaly_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfItaly.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e438c8f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Country AcademicYear IB_Students_Total Country_Origin\n",
      "1    Italy      2021/22            132521            All\n",
      "12   Italy      2020/21            125470            All\n",
      "23   Italy      2019/20            112010            All\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['Country', 'AcademicYear', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I Create a new DataFrame with only the specified columns\n",
    "dfItaly_subset = dfItaly[columns_to_keep]\n",
    "\n",
    "#at the moment, I am only interested in the overall number of international students and not in their country of origin. Hence, I only keep the total number of international students \n",
    "dfItaly_subset = dfItaly_subset[dfItaly_subset['Country_Origin'].isin(['ALL', 'All'])]\n",
    "\n",
    "#Now, 'df_subset' contains only the specified columns.I check that everything went well.\n",
    "print(dfItaly_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "03825d72",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                              Italy   \n",
      "2                                              Italy   \n",
      "3                                              Italy   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2022   \n",
      "3                                            2021   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                153   \n",
      "2                                                153   \n",
      "3                                                NaN   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                112   \n",
      "2                                                112   \n",
      "3                                                NaN   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                265   \n",
      "2                                                265   \n",
      "3                                                257   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students in private...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            2004313  \n",
      "2                                            1935024  \n",
      "3                                            1999049  \n"
     ]
    }
   ],
   "source": [
    "#now, I open the sheet with the general info on the higher education system.\n",
    "excel_file_path_studentsItaly = \"C:/Users/lionet000\\Downloads/Italy_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with all of the raw variables\n",
    "sheet_name_studentsItaly2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfItaly2 = pd.read_excel(excel_file_path_studentsItaly, sheet_name=sheet_name_studentsItaly2)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfItaly2.to_csv('studentsItaly2_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfItaly2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f6f7b977",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear Country HE_Students_Total\n",
      "0      2021/22   Italy           2004313\n",
      "1      2020/21   Italy           1935024\n",
      "2      2019/20   Italy           1999049\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need\n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfItaly_subset2 = dfItaly2[columns_to_keep]\n",
    "dfItaly_subset2 = dfItaly_subset2.drop(0)\n",
    "\n",
    "#I reset the index if needed\n",
    "dfItaly_subset2 = dfItaly_subset2.reset_index(drop=True)\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns\n",
    "print(dfItaly_subset2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "42f04be0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear Country % international students\n",
      "0      2021/22   Italy                 6.611792\n",
      "1      2020/21   Italy                 6.484157\n",
      "2      2019/20   Italy                 5.603164\n"
     ]
    }
   ],
   "source": [
    "#I merge the 2 datsets\n",
    "dfItaly_final = pd.merge(dfItaly_subset, dfItaly_subset2, on=['Country', 'AcademicYear'])\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later\n",
    "dfItaly_final['% international students'] = dfItaly_final['IB_Students_Total'] / dfItaly_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfItaly_final = dfItaly_final[columns_to_keep_final]\n",
    "\n",
    "#I visualize the new dataset and check that everything went well. \n",
    "print(dfItaly_final.head())\n",
    "\n",
    "#I save the new dataset.\n",
    "dfItaly_final.to_csv('studentsItaly_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb5be650",
   "metadata": {},
   "source": [
    "# Cleaning the German dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3483ccf0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                            Germany   \n",
      "2                                            Germany   \n",
      "3                                            Germany   \n",
      "4                                            Germany   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2021/22   \n",
      "3                                            2021/22   \n",
      "4                                            2021/22   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in...   \n",
      "1                                                All   \n",
      "2                                              China   \n",
      "3                                              India   \n",
      "4                                              Syria   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                                Yes   \n",
      "2                                                Yes   \n",
      "3                                                Yes   \n",
      "4                                                Yes   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                 10   \n",
      "2                                                 10   \n",
      "3                                                 10   \n",
      "4                                                 10   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2021   \n",
      "2                                               2021   \n",
      "3                                               2021   \n",
      "4                                               2021   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  4   \n",
      "2                                                  4   \n",
      "3                                                  4   \n",
      "4                                                  4   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                               2022   \n",
      "3                                               2022   \n",
      "4                                               2022   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                                NaN  ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                              33040   \n",
      "2                                               3717   \n",
      "3                                               4092   \n",
      "4                                               1234   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                       25274   \n",
      "2                                         922   \n",
      "3                                         616   \n",
      "4                                        1059   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                              46673   \n",
      "2                                               3889   \n",
      "3                                               6197   \n",
      "4                                               3155   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                             25447   \n",
      "2                                              2815   \n",
      "3                                               703   \n",
      "4                                               826   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                          17470   \n",
      "2                                           1453   \n",
      "3                                            414   \n",
      "4                                           1575   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                  3847   \n",
      "2                                   179   \n",
      "3                                    60   \n",
      "4                                   144   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                  28925   \n",
      "2                                   3603   \n",
      "3                                    562   \n",
      "4                                    631   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                    6418   \n",
      "2                                     520   \n",
      "3                                     540   \n",
      "4                                     110   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                              11969   \n",
      "2                                               1086   \n",
      "3                                                315   \n",
      "4                                                345   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1                                                NaN  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to your Excel file\n",
    "excel_file_path_studentsGermany = \"C:/Users/lionet000\\Downloads/Germany_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with the information on the international students. \n",
    "sheet_name_studentsGermany= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfGermany = pd.read_excel(excel_file_path_studentsGermany, sheet_name=sheet_name_studentsGermany)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfGermany.to_csv('studentsGermany_dataset.csv', index=False)\n",
    "\n",
    "#I visualizing the dataset\n",
    "print(dfGermany.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ac0309d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                            Germany   \n",
      "2                                            Germany   \n",
      "3                                            Germany   \n",
      "4                                            Germany   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2022   \n",
      "3                                            2021   \n",
      "4                                            2020   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                272   \n",
      "2                                                271   \n",
      "3                                                271   \n",
      "4                                                271   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                153   \n",
      "2                                                155   \n",
      "3                                                156   \n",
      "4                                                158   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                425   \n",
      "2                                                426   \n",
      "3                                                427   \n",
      "4                                                429   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                            2567435   \n",
      "2                                            2605480   \n",
      "3                                            2590454   \n",
      "4                                            2590041   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students (including...   \n",
      "1                                             374480   \n",
      "2                                             338665   \n",
      "3                                             300595   \n",
      "4                                             278181   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            2941915  \n",
      "2                                            2944145  \n",
      "3                                            2891049  \n",
      "4                                            2868222  \n"
     ]
    }
   ],
   "source": [
    "#now, I open the sheet with the general information on the higher education system.\n",
    "excel_file_path_studentsGermany = \"C:/Users/lionet000\\Downloads/Germany_2023 Longitudinal Table.xlsx\"\n",
    "sheet_name_studentsGermany2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfGermany2 = pd.read_excel(excel_file_path_studentsGermany, sheet_name=sheet_name_studentsGermany2)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfGermany2.to_csv('studentsGermany2_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfGermany2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e90ab995",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear  Country IB_Students_Total Country_Origin\n",
      "1       2021/22  Germany            349438            All\n",
      "12      2020/21  Germany            324729            All\n",
      "23      2019/20  Germany            319902            All\n",
      "34      2018/19  Germany            302157            ALL\n",
      "45      2017/18  Germany            282002            ALL\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfGermany_subset = dfGermany[columns_to_keep]\n",
    "\n",
    "#at the moment, I am only interested in the overall number of international students and not in their country of origin. Hence, I only keep the total number of international students\n",
    "dfGermany_subset = dfGermany_subset[dfGermany_subset['Country_Origin'].isin(['ALL', 'All'])]\n",
    "\n",
    "# Now, 'df_subset' contains only the specified columns\n",
    "print(dfGermany_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2fc40604",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                            Germany   \n",
      "2                                            Germany   \n",
      "3                                            Germany   \n",
      "4                                            Germany   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            2941915  \n",
      "2                                            2944145  \n",
      "3                                            2891049  \n",
      "4                                            2868222  \n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfGermany2_subset = dfGermany2[columns_to_keep]\n",
    "\n",
    "#Now, the dataset contains only the specified columns\n",
    "print(dfGermany2_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "985972fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear  Country % international students\n",
      "0      2021/22  Germany                11.877909\n",
      "1      2020/21  Germany                11.029654\n",
      "2      2019/20  Germany                11.065257\n",
      "3      2018/19  Germany                10.534645\n",
      "4      2017/18  Germany                 9.912273\n"
     ]
    }
   ],
   "source": [
    "#I merge the 2 datsets\n",
    "dfGermany_final = pd.merge(dfGermany_subset, dfGermany2_subset, on=['Country', 'AcademicYear'])\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later\n",
    "dfGermany_final['% international students'] = dfGermany_final['IB_Students_Total'] / dfGermany_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfGermany_final = dfGermany_final[columns_to_keep_final]\n",
    "\n",
    "#I visualize the new dataset\n",
    "print(dfGermany_final.head())\n",
    "\n",
    "#I save the new dataset into a csv file\n",
    "dfGermany_final.to_csv('studentsGermany_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5c77b22",
   "metadata": {},
   "source": [
    "# Cleaning the French dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "97cb6dac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                             France   \n",
      "2                                             France   \n",
      "3                                             France   \n",
      "4                                             France   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2021/22   \n",
      "3                                            2021/23   \n",
      "4                                            2021/24   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in...   \n",
      "1                                                ALL   \n",
      "2                                            Morocco   \n",
      "3                                            Algeria   \n",
      "4                                              China   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                                Yes   \n",
      "2                                                Yes   \n",
      "3                                                Yes   \n",
      "4                                                Yes   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  9   \n",
      "2                                                  9   \n",
      "3                                                  9   \n",
      "4                                                  9   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2021   \n",
      "2                                               2021   \n",
      "3                                               2021   \n",
      "4                                               2021   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                  6   \n",
      "2                                                  6   \n",
      "3                                                  6   \n",
      "4                                                  6   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                               2022   \n",
      "3                                               2022   \n",
      "4                                               2022   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                                NaN  ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                         NaN   \n",
      "2                                         NaN   \n",
      "3                                         NaN   \n",
      "4                                         NaN   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                              82616   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                              7236   \n",
      "2                                               NaN   \n",
      "3                                               NaN   \n",
      "4                                               NaN   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                          21775   \n",
      "2                                            NaN   \n",
      "3                                            NaN   \n",
      "4                                            NaN   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                   NaN   \n",
      "2                                   NaN   \n",
      "3                                   NaN   \n",
      "4                                   NaN   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                  77314   \n",
      "2                                    NaN   \n",
      "3                                    NaN   \n",
      "4                                    NaN   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                     NaN   \n",
      "2                                     NaN   \n",
      "3                                     NaN   \n",
      "4                                     NaN   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                             120804   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1  Education and Agriculture don't exist as field...  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to my Excel file\n",
    "excel_file_path_studentsFrance = \"C:/Users/lionet000/Downloads/France_2023 Longitudinal Table.xlsx\"\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with the information on the international students\n",
    "sheet_name_studentsFrance= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfFrance = pd.read_excel(excel_file_path_studentsFrance, sheet_name=sheet_name_studentsFrance)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfFrance.to_csv('studentsFrance_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfFrance.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "da4d457e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                             France   \n",
      "2                                             France   \n",
      "3                                             France   \n",
      "4                                             France   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2022   \n",
      "3                                            2021   \n",
      "4                                            2019   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2021/22   \n",
      "2                                            2020/21   \n",
      "3                                            2019/20   \n",
      "4                                            2018/19   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                272   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                153   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                425   \n",
      "2                                               5098   \n",
      "3                                               5037   \n",
      "4                                               3500   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                            2567435   \n",
      "2                                            2192400   \n",
      "3                                            2164200   \n",
      "4                                            2160200   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students (including...   \n",
      "1                                             374480   \n",
      "2                                             592600   \n",
      "3                                             561100   \n",
      "4                                             520200   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                            2941915  \n",
      "2                                            2894500  \n",
      "3                                            2785000  \n",
      "4                                            2725300  \n"
     ]
    }
   ],
   "source": [
    "#now, I open the sheet with the general info on the higher education system. \n",
    "excel_file_path_studentsFrance = \"C:/Users\\lionet000/Downloads/France_2023 Longitudinal Table.xlsx\"\n",
    "sheet_name_studentsFrance2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfFrance2 = pd.read_excel(excel_file_path_studentsFrance, sheet_name=sheet_name_studentsFrance2)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfFrance2.to_csv('studentsFrance2_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfFrance2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "466b561c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear  Country IB_Students_Total Country_Origin\n",
      "1       2021/22   France            392630            ALL\n",
      "12      2020/21  France             364756            ALL\n",
      "23      2019/20  France             370052            ALL\n",
      "34      2018/19  France             343400            ALL\n",
      "45      2017/18  France             343386            ALL\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need (to review later)\n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfFrance_subset = dfFrance[columns_to_keep]\n",
    "\n",
    "#at the moment, I am only interested in the overall number of international students and not in their country of origin. Hence, I only keep the total number of international students \n",
    "dfFrance_subset = dfFrance_subset.query(\"Country_Origin == 'ALL'\")\n",
    "\n",
    "# Now, the dataset contains only the specified columns\n",
    "print(dfFrance_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "858a61f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear Country HE_Students_Total\n",
      "1      2021/22  France           2941915\n",
      "2      2020/21  France           2894500\n",
      "3      2019/20  France           2785000\n",
      "4      2018/19  France           2725300\n",
      "5      2017/18  France           2680400\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfFrance2_subset = dfFrance2[columns_to_keep]\n",
    "dfFrance2_subset = dfFrance2_subset.drop(0)\n",
    "\n",
    "# Now, the dataset contains only the specified columns\n",
    "print(dfFrance2_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "39076530",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear  Country IB_Students_Total Country_Origin HE_Students_Total\n",
      "0      2021/22   France            392630            ALL           2941915\n",
      "1      2020/21  France             364756            ALL               NaN\n",
      "2      2019/20  France             370052            ALL               NaN\n",
      "3      2018/19  France             343400            ALL               NaN\n",
      "4      2017/18  France             343386            ALL               NaN\n"
     ]
    }
   ],
   "source": [
    "#I merge the 2 datsets\n",
    "dfFrance_final = pd.merge(dfFrance_subset, dfFrance2_subset, on=['Country', 'AcademicYear'], how='left')\n",
    "\n",
    "#I visualize the new dataset and check that everything went well\n",
    "print(dfFrance_final.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "7b0f734f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear  Country % international students\n",
      "0      2021/22   France                13.346069\n",
      "1      2020/21  France                 12.601693\n",
      "2      2019/20  France                 13.287325\n",
      "3      2018/19  France                 12.600448\n",
      "4      2017/18  France                 12.810998\n",
      "5      2016/17  France                 12.412653\n",
      "6      2015/16  France                 12.137588\n",
      "7      2014/15  France                 12.097867\n",
      "8      2013/14  France                 11.943771\n",
      "9      2012/13  France                 11.903795\n"
     ]
    }
   ],
   "source": [
    "#For some reason some of the values for the total number of students do not get printed. So, I add them manually\n",
    "row_indexF = 1\n",
    "column_name = 'HE_Students_Total'\n",
    "new_valueF = 2894500\n",
    "\n",
    "row_index1F = 2\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value1F = 2785000 \n",
    "\n",
    "row_index2F = 3\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value2F = 2725300  \n",
    "\n",
    "row_index3F = 4\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value3F = 2680400  \n",
    "\n",
    "row_index4F = 5\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value4F = 2609700\n",
    "\n",
    "row_index5F = 7\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value5F = 2470700\n",
    "\n",
    "row_index6F = 8\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value6F = 2470677\n",
    "\n",
    "row_index7F = 9\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value7F = 2430099\n",
    "\n",
    "row_index8F = 10\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value8F = 2386400\n",
    "\n",
    "row_index8F = 6\n",
    "column_name = 'HE_Students_Total'\n",
    "new_value8F = 2551100\n",
    "\n",
    "dfFrance_final.at[row_indexF, column_name] = new_valueF\n",
    "dfFrance_final.at[row_index1F, column_name] = new_value1F\n",
    "dfFrance_final.at[row_index2F, column_name] = new_value2F\n",
    "dfFrance_final.at[row_index3F, column_name] = new_value3F\n",
    "dfFrance_final.at[row_index4F, column_name] = new_value4F\n",
    "dfFrance_final.at[row_index5F, column_name] = new_value5F\n",
    "dfFrance_final.at[row_index6F, column_name] = new_value6F\n",
    "dfFrance_final.at[row_index7F, column_name] = new_value7F\n",
    "dfFrance_final.at[row_index8F, column_name] = new_value8F\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later\n",
    "dfFrance_final['% international students'] = dfFrance_final['IB_Students_Total'] / dfFrance_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfFrance_final = dfFrance_final[columns_to_keep_final]\n",
    "\n",
    "#I print the new dataframe and check that everything went well\n",
    "print(dfFrance_final)\n",
    "\n",
    "#I save the final dataset\n",
    "dfFrance_final.to_csv('studentsFrance_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92779515",
   "metadata": {},
   "source": [
    "# Cleaning the Dutch dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "087aba69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                        Netherlands   \n",
      "2                                        Netherlands   \n",
      "3                                        Netherlands   \n",
      "4                                        Netherlands   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                            2023   \n",
      "3                                            2023   \n",
      "4                                            2023   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2022/23   \n",
      "2                                            2022/23   \n",
      "3                                            2022/23   \n",
      "4                                            2022/23   \n",
      "\n",
      "                                      Country_Origin  \\\n",
      "0  Origin country of foreign students studying in...   \n",
      "1                                               ALL    \n",
      "2                                            Germany   \n",
      "3                                              Italy   \n",
      "4                                            Romania   \n",
      "\n",
      "                                  IB_ProjectAtlasDef  \\\n",
      "0  Does the data on inbound mobility in this sect...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   IB_Report_StartMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                 IB_Report_StartYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2022   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                     IB_Report_EndMM  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   IB_Report_EndYYYY  \\\n",
      "0  Time period for which the country partner is r...   \n",
      "1                                               2023   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                     IB_Report_Other  ...  \\\n",
      "0  Time period for which the country partner is r...  ...   \n",
      "1                                     October, 2022   ...   \n",
      "2                                                NaN  ...   \n",
      "3                                                NaN  ...   \n",
      "4                                                NaN  ...   \n",
      "\n",
      "                                   IB_Field_Sciences  \\\n",
      "0  Total students enrolled in Physical and Life S...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                           IB_Field_SocialSci  \\\n",
      "0  Total students enrolled in Social Sciences   \n",
      "1                                       19481   \n",
      "2                                        6721   \n",
      "3                                        1210   \n",
      "4                                         649   \n",
      "\n",
      "                                       IB_Field_Math  \\\n",
      "0  Total students enrolled in Mathematics and Com...   \n",
      "1                                                NaN   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                      IB_Field_Arts  \\\n",
      "0  Total students enrolled in Fine and Applied Arts   \n",
      "1                                               NaN   \n",
      "2                                               NaN   \n",
      "3                                               NaN   \n",
      "4                                               NaN   \n",
      "\n",
      "                                 IB_Field_Health  \\\n",
      "0  Total students enrolled in Health Professions   \n",
      "1                                           5038   \n",
      "2                                           1112   \n",
      "3                                            255   \n",
      "4                                           1913   \n",
      "\n",
      "                          IB_Field_Educ  \\\n",
      "0  Total students enrolled in Education   \n",
      "1                                  1641   \n",
      "2                                   400   \n",
      "3                                    40   \n",
      "4                                    18   \n",
      "\n",
      "                          IB_Field_Human  \\\n",
      "0  Total students enrolled in Humanities   \n",
      "1                                    NaN   \n",
      "2                                    NaN   \n",
      "3                                    NaN   \n",
      "4                                    NaN   \n",
      "\n",
      "                            IB_Field_Agri  \\\n",
      "0  Total students enrolled in Agriculture   \n",
      "1                                    3660   \n",
      "2                                     573   \n",
      "3                                     344   \n",
      "4                                      68   \n",
      "\n",
      "                                      IB_Field_Other  \\\n",
      "0  Total students enrolled in Other/Unspecified s...   \n",
      "1                                              12698   \n",
      "2                                               2155   \n",
      "3                                               1087   \n",
      "4                                                528   \n",
      "\n",
      "                                  IB_Additional_Info  \n",
      "0  Any additional information country partner pro...  \n",
      "1                                                NaN  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n",
      "\n",
      "[5 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I specify the path to my Excel file\n",
    "excel_file_path_studentsNetherlands = \"C:/Users/lionet000\\Downloads/Netherlands students.xlsx\"\n",
    "\n",
    "\n",
    "#I specify the name of the sheet that I want to use. In this case, it is the data sheet with the information on the international students\n",
    "sheet_name_studentsNetherlands= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfNetherlands = pd.read_excel(excel_file_path_studentsNetherlands, sheet_name=sheet_name_studentsNetherlands)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfNetherlands.to_csv('studentsNetherlands_dataset.csv', index=False)\n",
    "\n",
    "#I visualizing the dataset\n",
    "print(dfNetherlands.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d85738e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                        Netherlands   \n",
      "2                                        Netherlands   \n",
      "3                                        Netherlands   \n",
      "4                                        Netherlands   \n",
      "\n",
      "                                    ReportingYear  \\\n",
      "0  Year the data was retrieved by Project Atlas®    \n",
      "1                                            2023   \n",
      "2                                             NaN   \n",
      "3                                             NaN   \n",
      "4                                             NaN   \n",
      "\n",
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2022/23   \n",
      "2                                            2021/22   \n",
      "3                                            2020/21   \n",
      "4                                            2019/20   \n",
      "\n",
      "                                    HE_Institute_Pub  \\\n",
      "0  Number of public higher education institutions...   \n",
      "1                                                 54   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   HE_Institute_Priv  \\\n",
      "0  Number of private higher education institution...   \n",
      "1                                                 66   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                  HE_Institute_Total  \\\n",
      "0  Total number of higher education institutions ...   \n",
      "1                                                120   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                     HE_Students_Pub  \\\n",
      "0  Number of higher education students in public ...   \n",
      "1                                             815247   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                    HE_Students_Priv  \\\n",
      "0  Number of higher education students (including...   \n",
      "1                                              57589   \n",
      "2                                                NaN   \n",
      "3                                                NaN   \n",
      "4                                                NaN   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                             872836  \n",
      "2                                             833826  \n",
      "3                                             817271  \n",
      "4                                             767577  \n"
     ]
    }
   ],
   "source": [
    "#now, I open the dataset with the general information on the higher education system.\n",
    "excel_file_path_studentsNetherlands = \"C:/Users/lionet000\\Downloads/Netherlands students.xlsx\"\n",
    "sheet_name_studentsNetherlands2= \"Higher Ed Sector\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfNetherlands2 = pd.read_excel(excel_file_path_studentsNetherlands, sheet_name=sheet_name_studentsNetherlands2)\n",
    "    \n",
    "#I save the DataFrame to a new CSV file:\n",
    "dfNetherlands2.to_csv('studentsNetherlands2_dataset.csv', index=False)\n",
    "\n",
    "#I visualize the dataset\n",
    "print(dfNetherlands2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "4df5120e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear      Country IB_Students_Total Country_Origin\n",
      "12      2021/22  Netherlands            115068            All\n",
      "23      2020/21  Netherlands            103708            All\n",
      "34      2019/20  Netherlands             93649            All\n",
      "45      2018/19  Netherlands             84838            All\n",
      "56      2017/18  Netherlands             75721            All\n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfNetherlands_subset = dfNetherlands[columns_to_keep]\n",
    "\n",
    "#at the moment, I am only interested in the overall number of international students and not in their country of origin. Hence, I only keep the total number of international students \n",
    "dfNetherlands_subset = dfNetherlands_subset[dfNetherlands_subset['Country_Origin'].isin(['ALL', 'All'])]\n",
    "\n",
    "#now, the dataset contains only the specified columns\n",
    "print(dfNetherlands_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "3643640b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2022/23   \n",
      "2                                            2021/22   \n",
      "3                                            2020/21   \n",
      "4                                            2019/20   \n",
      "\n",
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                        Netherlands   \n",
      "2                                        Netherlands   \n",
      "3                                        Netherlands   \n",
      "4                                        Netherlands   \n",
      "\n",
      "                                   HE_Students_Total  \n",
      "0  Total number of higher education students in t...  \n",
      "1                                             872836  \n",
      "2                                             833826  \n",
      "3                                             817271  \n",
      "4                                             767577  \n"
     ]
    }
   ],
   "source": [
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'HE_Students_Total']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfNetherlands2_subset = dfNetherlands2[columns_to_keep]\n",
    "\n",
    "#now, the dataset contains only the specified columns\n",
    "print(dfNetherlands2_subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "ec7c7537",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  AcademicYear      Country % international students\n",
      "0      2021/22  Netherlands                13.800001\n",
      "1      2020/21  Netherlands                12.689549\n",
      "2      2019/20  Netherlands                  12.2006\n",
      "3      2018/19  Netherlands                 11.34439\n",
      "4      2017/18  Netherlands                10.370666\n"
     ]
    }
   ],
   "source": [
    "#I merge the 2 datsets\n",
    "dfNetherlands_final = pd.merge(dfNetherlands_subset, dfNetherlands2_subset, on=['Country', 'AcademicYear'])\n",
    "\n",
    "#I create a new variable: the % of international students as a share of the total student body in the country. I do so that I can compare the % across various countries later\n",
    "dfNetherlands_final['% international students'] = dfNetherlands_final['IB_Students_Total'] / dfNetherlands_final['HE_Students_Total'] * 100\n",
    "\n",
    "#I only keep the columns that I need\n",
    "columns_to_keep_final = ['AcademicYear', 'Country', '% international students']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfNetherlands_final = dfNetherlands_final[columns_to_keep_final]\n",
    "\n",
    "#I visualise the new dataset\n",
    "print(dfNetherlands_final.head())\n",
    "\n",
    "#I save the new dataset into a csv file\n",
    "dfNetherlands_final.to_csv('studentsNetherlands_final_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0671b305",
   "metadata": {},
   "source": [
    "# Merging the datsets and cleaning the new one"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "fe791609",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   AcademicYear         Country % international students\n",
      "0       2021/22  United Kingdom                25.084887\n",
      "1       2020/21  United Kingdom                 23.03565\n",
      "2       2019/20  United Kingdom                25.260714\n",
      "3       2018/19  United Kingdom                22.254707\n",
      "4       2017/18  United Kingdom                20.863891\n",
      "5       2016/17  United Kingdom                21.035144\n",
      "6       2015/16  United Kingdom                 21.14386\n",
      "7       2014/15  United Kingdom                21.123385\n",
      "8       2013/14  United Kingdom                21.465585\n",
      "9       2012/13  United Kingdom                19.865499\n",
      "10      2011/12  United Kingdom                 18.97631\n",
      "11      2021/22          France                13.346069\n",
      "12      2020/21         France                 12.601693\n",
      "13      2019/20         France                 13.287325\n",
      "14      2018/19         France                 12.600448\n",
      "15      2017/18         France                 12.810998\n",
      "16      2016/17         France                 12.412653\n",
      "17      2015/16         France                 12.137588\n",
      "18      2014/15         France                 12.097867\n",
      "19      2013/14         France                 11.943771\n",
      "20      2012/13         France                 11.903795\n",
      "21      2021/22           Italy                 6.611792\n",
      "22      2020/21           Italy                 6.484157\n",
      "23      2019/20           Italy                 5.603164\n",
      "24      2021/22         Poland                  7.105808\n",
      "25      2020/21         Poland                  6.952857\n",
      "26      2019/20         Poland                  6.826756\n",
      "27      2018/19          Poland                 6.361207\n",
      "28      2017/18          Poland                 5.630699\n",
      "29      2021/22         Germany                11.877909\n",
      "30      2020/21         Germany                11.029654\n",
      "31      2019/20         Germany                11.065257\n",
      "32      2018/19         Germany                10.534645\n",
      "33      2017/18         Germany                 9.912273\n",
      "34      2016/17         Germany                 9.457893\n",
      "35      2015/16         Germany                 9.121114\n",
      "36      2014/15         Germany                 8.739009\n",
      "37      2013/14         Germany                11.515617\n",
      "38      2012/13         Germany                11.290709\n",
      "39      2011/12         Germany                11.142163\n",
      "40      2021/22     Netherlands                13.800001\n",
      "41      2020/21     Netherlands                12.689549\n",
      "42      2019/20     Netherlands                  12.2006\n",
      "43      2018/19     Netherlands                 11.34439\n",
      "44      2017/18     Netherlands                10.370666\n",
      "45      2016/17     Netherlands                 9.538936\n",
      "46      2015/16     Netherlands                10.679051\n",
      "47      2014/15     Netherlands                12.908547\n",
      "48      2021/22          Spain                  7.977558\n",
      "49      2020/21           Spain                 5.452942\n",
      "50      2019/20           Spain                 7.957152\n",
      "51      2018/19           Spain                 7.859354\n",
      "52      2017/18           Spain                 7.643025\n",
      "53      2016/17           Spain                 6.998466\n",
      "54      2015/16           Spain                 6.133034\n",
      "55      2014/15           Spain                 4.944414\n",
      "56      2013/14           Spain                12.343873\n",
      "57      2012/13           Spain                 4.717053\n"
     ]
    }
   ],
   "source": [
    "#I merged all of the datasets together\n",
    "new_df = pd.concat([dfUK_final, dfFrance_final, dfItaly_final, dfPoland_final, dfGermany_final, dfNetherlands_final, dfSpain_final], ignore_index=True)\n",
    "\n",
    "#I print the merged DataFrame\n",
    "print(new_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "ae789151",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['united kingdom' 'france' 'italy' 'poland' 'germany' 'netherlands'\n",
      " 'spain']\n"
     ]
    }
   ],
   "source": [
    "#I standardise the countries' nanmes and check that it worked\n",
    "new_df['Country'] = new_df['Country'].str.strip().str.lower()\n",
    "unique_countries = new_df['Country'].unique()\n",
    "print(unique_countries)\n",
    "\n",
    "#I save the new dataset\n",
    "new_df.to_csv('students_finaldataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "b634db18",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'merged_df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[45], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#i tranbspose the data, so that it is easier to look at it over time in a graoh\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m pivot_df \u001b[38;5;241m=\u001b[39m merged_df\u001b[38;5;241m.\u001b[39mpivot(index\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAcademicYear\u001b[39m\u001b[38;5;124m'\u001b[39m, columns\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCountry\u001b[39m\u001b[38;5;124m'\u001b[39m, values\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m% i\u001b[39;00m\u001b[38;5;124mnternational students\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      4\u001b[0m \u001b[38;5;66;03m# Reset the index for a cleaner output\u001b[39;00m\n\u001b[0;32m      5\u001b[0m pivot_df\u001b[38;5;241m.\u001b[39mreset_index(inplace\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'merged_df' is not defined"
     ]
    }
   ],
   "source": [
    "#I transpose the data, so that it is easier to look at it over time in a graoh\n",
    "pivot_df = merged_df.pivot(index='AcademicYear', columns='Country', values='% international students')\n",
    "\n",
    "#I reset the index for a cleaner output\n",
    "pivot_df.reset_index(inplace=True)\n",
    "\n",
    "#I display the pivoted DataFrame\n",
    "print(pivot_df)\n",
    "\n",
    "#I save the new dataset\n",
    "pivot_df.to_csv('students_finaldataset_graph.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0687d18",
   "metadata": {},
   "source": [
    "# Looking at where students come from"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5451ffe",
   "metadata": {},
   "source": [
    "# In the Netherlands "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "79c7e098",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                        AcademicYear  \\\n",
      "0  The academic year the data reflects, as reflec...   \n",
      "1                                            2022/23   \n",
      "2                                            2022/23   \n",
      "3                                            2022/23   \n",
      "4                                            2022/23   \n",
      "\n",
      "                                             Country  \\\n",
      "0  Project Atlas® partner country reporting the d...   \n",
      "1                                        Netherlands   \n",
      "2                                        Netherlands   \n",
      "3                                        Netherlands   \n",
      "4                                        Netherlands   \n",
      "\n",
      "                                   IB_Students_Total  \\\n",
      "0  Total for all international students enrolled ...   \n",
      "1                                             122287   \n",
      "2                                              22775   \n",
      "3                                               7633   \n",
      "4                                               6717   \n",
      "\n",
      "                                      Country_Origin  \n",
      "0  Origin country of foreign students studying in...  \n",
      "1                                               ALL   \n",
      "2                                            Germany  \n",
      "3                                              Italy  \n",
      "4                                            Romania  \n"
     ]
    }
   ],
   "source": [
    "#Importing the necessary package\n",
    "import pandas as pd\n",
    "\n",
    "#I open the sheet on the international students\n",
    "excel_file_path_studentsNetherlands = \"C:/Users/lionet000\\Downloads/Netherlands students.xlsx\"\n",
    "sheet_name_studentsNetherlands= \"Inbound Mobility\"\n",
    "\n",
    "#I read the Excel file into a pandas DataFrame\n",
    "dfNetherlands = pd.read_excel(excel_file_path_studentsNetherlands, sheet_name=sheet_name_studentsNetherlands)\n",
    "    \n",
    "#I saving the DataFrame to a new CSV file:\n",
    "dfNetherlands.to_csv('studentsNetherlands_dataset.csv', index=False)\n",
    "\n",
    "#I only keep the columns that I need \n",
    "columns_to_keep = ['AcademicYear', 'Country', 'IB_Students_Total', 'Country_Origin']\n",
    "\n",
    "#I create a new DataFrame with only the specified columns\n",
    "dfNetherlands_subset = dfNetherlands[columns_to_keep]\n",
    "\n",
    "#I visualizing the dataset\n",
    "print(dfNetherlands_subset.head())\n",
    "\n",
    "#I save the dataset\n",
    "dfNetherlands_subset.to_csv('inboundstudentsNetherlands.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0997bd1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Country_Origin AcademicYear    All\n",
      "0                   2014/15  90389\n",
      "1                   2015/16  74894\n",
      "2                   2016/17  67928\n",
      "3                   2017/18  75721\n",
      "4                   2018/19  84838\n"
     ]
    }
   ],
   "source": [
    "#Now I make each country of origin become a column, so that I can analyse the data later\n",
    "\n",
    "# Pivot the DataFrame\n",
    "dfNL_bycountry = dfNetherlands_subset.pivot_table(index='AcademicYear', columns='Country_Origin', values='IB_Students_Total', aggfunc='sum')\n",
    "\n",
    "#I reset the index for a cleaner output\n",
    "dfNL_bycountry.reset_index(inplace=True)\n",
    "\n",
    "#I print the pivoted DataFrame\n",
    "print(dfNL_bycountry.head())\n",
    "\n",
    "#I save the dataframe into a csv file\n",
    "dfNL_bycountry.to_csv('studentsNehterlands_bycountry.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a5c0971e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
